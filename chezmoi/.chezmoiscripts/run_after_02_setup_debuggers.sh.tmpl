#!/bin/bash

. "{{ .chezmoi.sourceDir }}/../scripts/utils.sh"

print_info "\nSetting up java debugger\n"
print_info "Pulling/cloning repositories.\n"

if [ -d ~/.config/nvim/java-debug ]; then
    git -C ~/.config/nvim/java-debug/ pull
else 
    git clone https://github.com/microsoft/java-debug ~/.config/nvim/java-debug/
fi

if [ -d ~/.config/nvim/vscode-java-test ]; then
    git -C ~/.config/nvim/vscode-java-test/ checkout -f
    git -C ~/.config/nvim/vscode-java-test/ checkout 8e25a6151e2b04e509fa336de50bae0509e5204e
    git -C ~/.config/nvim/vscode-java-test/ pull

else 
    git clone https://github.com/microsoft/vscode-java-test ~/.config/nvim/vscode-java-test/
    git -C ~/.config/nvim/vscode-java-test/ checkout 8e25a6151e2b04e509fa336de50bae0509e5204e
fi

print_info "\nInstalling plugins.\n"

cd ~/.config/nvim/java-debug/

./mvnw clean install -DskipTests

cd ~/.config/nvim/vscode-java-test/

npm install
npm run build-plugin

print_success "Done!\n"

print_info "\nSetting up dotnet debugger\n"
print_info "\nPulling latest binary\n"

rm -rf ~/.config/nvim/netcoredbg

mkdir ~/.config/nvim/tmp
cd ~/.config/nvim/tmp

curl -s https://api.github.com/repos/Samsung/netcoredbg/releases/latest \
| grep "netcoredbg-osx-amd64.tar.gz" \
| cut -d : -f 2,3 \
| tr -d \" \
| wget -qi -

tar -xzvf ./netcoredbg-osx-amd64.tar.gz -C ~/.config/nvim

cd ~/.config
rm -rf ~/.config/nvim/tmp

print_info "\nSetting up dart debugger\n"
print_info "Pulling/cloning repositories.\n"

if [ -d ~/.config/nvim/dart-code ]; then
    git -C ~/.config/nvim/dart-code/ pull
else
    git clone https://github.com/Dart-Code/Dart-Code ~/.config/nvim/dart-code/
fi

cd ~/.config/nvim/dart-code
npx webpack --mode production

print_success "Done!\n"
